// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`YSOArcadeRecordsPage should show as expected 1`] = `
<main
  class="min-h-screen flex flex-col w-full flex flex-col items-center"
>
  <div
    aria-label="banner-image"
    class="pt-16 w-full h-[50vh]"
  >
    <img
      alt="YSOArcadeRecordsPage 배너 이미지"
      class="w-full h-full object-cover"
      data-nimg="1"
      decoding="async"
      height="40"
      loading="lazy"
      src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
      srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
      style="color: transparent;"
      width="40"
    />
  </div>
  <div
    class="flex flex-col px-8 py-24 gap-16 sm:px-24 max-w-6xl"
  >
    <div
      class="w-full text-right"
    >
      최근 수정 일자: 
      2025
      년 
      6
      월
       
      9
      일
    </div>
    <h1
      class="text-bold text-4xl sm:text-5xl md:text-6xl"
    >
      YSOArcadeRecords
    </h1>
    <div
      class="w-full flex flex-row flex-wrap justify-center items-center gap-4"
    >
      <img
        alt="YSOShmupRecords 각종 아케이드 기록 리스트"
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt="YSOShmupRecords 아케이드 기록 아티클"
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt="YSOShmupRecords 기록 생성 상단 부분"
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt="YSOShmupRecords 기록 생성 하단 부분"
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
    </div>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        개요
      </h2>
      <section>
        <ul
          class="list-disc pl-8"
        >
          <li>
            개인 프로젝트
          </li>
          <li>
            구현 내용
            <ul
              class="list-disc pl-8"
            >
              <li>
                프로젝트 세팅, 태스크 브레이크다운, 퍼블리싱, 기능 구현, 배포, 문서 및 업데이트 로그 작성, 유지보수를 담당함.
              </li>
              <li>
                Next.js의 App Router를 활용하여 파일 시스템 기반의 간단한 페이지 라우팅.
              </li>
              <li>
                기록 열람, 외부로 공유, 다크 모드 등등 각종 기능 구현.
              </li>
              <li>
                데이터를 가져오는 동안 UI가 멈춰있어 보이지 않기 위해 스켈레톤 컴포넌트 적용.
              </li>
              <li>
                Supabase와 Server Actions, API Routes를 사용하여, 데이터 생성/열람/수정/삭제를 단 하나의 사이트에서 모두 할 수 있게 만듦.
              </li>
            </ul>
          </li>
        </ul>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        방문하기
      </h2>
      <section>
        [
         
        <a
          class="text-blue-500 hover:text-purple-500 undefined"
          href="https://github.com/kuman514/YSOArcadeRecords"
          target="_blank"
        >
          GitHub 저장소
        </a>
         
        ] [
         
        <a
          class="text-blue-500 hover:text-purple-500 undefined"
          href="https://yso-arcade-records.vercel.app/"
          target="_blank"
        >
          사이트
        </a>
         
        ]
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        이 프로젝트를 만든 이유
      </h2>
      <section
        class="flex flex-row flex-wrap gap-2"
      >
        <p
          class="text-base font-normal indent-4 undefined"
        >
          슈팅게임 동호인들과 더욱 원활하게 교류하기 위해 제작되었습니다. 기존에는 SNS나 디스코드 등의 메신저로 교류하였으나, 이러한 교류 수단은 다른 종류의 글이나 메시지까지 난잡하게 섞여 있어 슈팅게임 관련 내용을 제대로 찾아보기 어려운 문제를 안고 있었습니다. 이러한 문제를 해결하고자 제가 달성한 각종 기록, 제게 인상깊었던 게임과 각종 아케이드 관련 사진 모음집을 더욱 쉽게 열람하고 공유할 수 있는 사이트를 직접 개발하였습니다.
        </p>
        <p
          class="text-base font-normal indent-4 undefined"
        >
          또한, 이 프로젝트는 YSOShmupRecords로부터 이어지며, 레포지토리가 분산되어 있던 프론트엔드(YSOShmupRecords), 백엔드(YSOShmupRecordsBackend), 백오피스(Writronics)를 하나의 레포지토리(YSOArcadeRecords)에 통합하기 위해 제작되었습니다. 이에 그치지 않고, 라우팅 설정에 추가적인 작업이 필요한 react-router-dom으로부터 탈피하고, 파일 경로만 정해줘도 라우팅 설정이 끝나는, 더 간단한 라우팅 방식, 그리고 서버 사이드 렌더링을 통해 페이지의 로딩 시간을 감소시킬 필요가 있었습니다. 이러한 목적에 가장 적절한 방법이 Next.js 15를 사용하는 것이었습니다.
        </p>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        사용한 기술 스택
      </h2>
      <section
        class="flex flex-row flex-wrap gap-2"
      >
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          Next.js
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          React
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          TypeScript
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          Axios
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          Vercel
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          Supabase
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded-sm undefined"
        >
          Tailwind CSS
        </span>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        스켈레톤 컴포넌트 적용
      </h2>
      <section
        class="flex flex-col gap-4"
      >
        <div
          class="w-full flex flex-row flex-wrap justify-center items-center gap-4"
        >
          <img
            alt="YSOShmupRecords에서 아케이드 기록 리스트를 불러오는 중에 나오는 스켈레톤 컴포넌트"
            class="w-fit max-h-80 object-contain"
            data-nimg="1"
            decoding="async"
            height="40"
            loading="lazy"
            src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
            srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
            style="color: transparent;"
            width="40"
          />
        </div>
        <p
          class="text-base font-normal indent-4 undefined"
        >
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            스켈레톤 컴포넌트는 데이터를 가져오는 동안 임시 콘텐츠를 표시하는 컴포넌트
          </strong>
          입니다. 사용자는 콘텐츠를 기다리다가 쉽게 지치고 지루함을 느끼므로, 데이터를 가져오는 동안 단순히 빈 화면만 보여준다면 많은 사람들은 사이트를 떠나게 될 것입니다. 그래서 이를 방지하기 위해,
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            애니메이션 효과가 들어간 스켈레톤 컴포넌트를 직접 만들어, 기록 목록이나 기록 아티클 로딩 등에 적용
          </strong>
          하였습니다.
        </p>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        Supabase와 Server Actions, API Routes 사용
      </h2>
      <section
        class="flex flex-col gap-4"
      >
        <p
          class="text-base font-normal indent-4 undefined"
        >
          기록과 리뷰 등의 데이터를 더욱 쉽게 관리하기 위해,
           
          <a
            class="text-blue-500 hover:text-purple-500 undefined"
            href="https://supabase.com/pricing"
            target="_blank"
          >
            무료 티어로도 API 무제한 호출이 가능한 Supabase
          </a>
          와 Server Actions, 그리고 API Routes를 이용해 데이터베이스와 퍼블릭 버킷을 연동하여, 하나의 프로젝트에서 기록/리뷰 열람/추가/편집/삭제는 물론 직접 이미지 업로드하는 것까지 모두 가능하게 만들었습니다. 기록과 리뷰 열람은 누구나 할 수 있지만 추가/편집/삭제는 관리자 로그인이 필요하도록 만들었습니다. 이미지는 서버 액션에 올리기에 용량이 너무 큰 탓에, 이미지 업로드는 API Routes를 통해 진행하였습니다.
        </p>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        아케이드 기록 관련 기능 시연 영상
      </h2>
      <section
        class="flex flex-col gap-4"
      >
        <div
          class="w-full h-60 sm:h-80"
        >
          <iframe
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen=""
            height="100%"
            src="https://www.youtube.com/embed/Fh0yuBlXII8"
            style="border-width: 0px;"
            title="YouTube video player"
            width="100%"
          />
        </div>
        <div
          class="w-full h-60 sm:h-80"
        >
          <iframe
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen=""
            height="100%"
            src="https://www.youtube.com/embed/m4y4TCb95c0"
            style="border-width: 0px;"
            title="YouTube video player"
            width="100%"
          />
        </div>
      </section>
    </section>
  </div>
</main>
`;
