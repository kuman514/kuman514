// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HanmogmPage should show as expected 1`] = `
<main
  class="min-h-screen flex flex-col w-full flex flex-col items-center"
>
  <div
    aria-label="banner-image"
    class="pt-16 w-full h-[50vh]"
  >
    <img
      alt="한모금 배너 이미지"
      class="w-full h-full object-cover"
      data-nimg="1"
      decoding="async"
      height="40"
      loading="lazy"
      src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
      srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
      style="color: transparent;"
      width="40"
    />
  </div>
  <div
    class="flex flex-col px-8 py-24 gap-16 sm:px-24 max-w-6xl"
  >
    <div
      class="w-full text-right"
    >
      최근 수정 일자: 
      2024
      년 
      11
      월
       
      5
      일
    </div>
    <h1
      class="text-bold text-4xl sm:text-5xl md:text-6xl"
    >
      한모금 (Hanmogm)
    </h1>
    <div
      class="w-full flex flex-row flex-wrap justify-center items-center gap-4"
    >
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
      <img
        alt=""
        class="w-fit max-h-80 object-contain"
        data-nimg="1"
        decoding="async"
        height="40"
        loading="lazy"
        src="/_next/image?url=%2Fimg.jpg&w=96&q=75"
        srcset="/_next/image?url=%2Fimg.jpg&w=48&q=75 1x, /_next/image?url=%2Fimg.jpg&w=96&q=75 2x"
        style="color: transparent;"
        width="40"
      />
    </div>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        개요
      </h2>
      <section>
        <ul
          class="list-disc pl-8"
        >
          <li>
            iOS + Android를 타겟으로 한, 각종 주류 정보를 열람하고 시음기록을 작성할 수 있는 테이스팅 노트 앱.
          </li>
          <li>
            팀 구성: PM 1명, 기획자 1명, 디자이너 1명, 백엔드 2명, 프론트엔드 1명 (본인)
          </li>
          <li>
            작업 내용
            <ul
              class="list-disc pl-8"
            >
              <li>
                Expo로 React Native 프로젝트를 세팅하여, iOS + Android 타겟이면서도 MacOS뿐만 아니라 Windows로도 개발할 수 있게 만듦.
              </li>
              <li>
                React Navigation의 Native Stack Navigator를 사용하여 스크린 라우팅.
              </li>
              <li>
                Axios를 이용하여 게시물 등록/수정/삭제/열람과 이미지 업로드 등등, 백엔드 API와 연계된 각종 기능 구현.
              </li>
              <li>
                Amazon Cognito Identity JS를 이용하여 회원가입, 로그인, 회원탈퇴, 비밀번호 초기화, 이메일 인증 등의 유저 관련 기능 구현.
              </li>
              <li>
                각종 기능에 대해 로딩 여부, 에러 여부, 결과값을 담은 커스텀 훅을 구축.
              </li>
              <li>
                expo-updates 패키지와 Expo Channel을 활용한 CI/CD를 구축하여, Expo 무료 플랜에서 월 30회(iOS 15회)까지만 할 수 있는 EAS Build를 절약함.
              </li>
            </ul>
          </li>
        </ul>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        앱 다운로드
      </h2>
      <section>
        [
         
        <a
          class="text-blue-500 hover:text-purple-500 undefined"
          href="https://apps.apple.com/kr/app/%ED%95%9C%EB%AA%A8%EA%B8%88-hanmogm/id6502346193"
          target="_blank"
        >
          iOS 다운로드
        </a>
         
        ] [ Android 출시 준비 중 ]
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        사용한 기술 스택
      </h2>
      <section
        class="flex flex-row flex-wrap gap-2"
      >
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
        >
          Expo
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
        >
          React Native
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
        >
          TypeScript
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
        >
          Axios
        </span>
        <span
          class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
        >
          Zustand
        </span>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        협업 방법
      </h2>
      <section>
        <p
          class="text-base font-normal indent-4 undefined"
        >
          저희 팀은
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            Slack, Figma, Jira를 활용하여 정기 회의, 디자인 반영, 태스크 브레이크다운, 개발 일정 산정, 진행상황 및 요청사항 보고 등등의 소통
          </strong>
          을 진행해왔습니다. 특히, 저는 프론트엔드 개발자로서 기획자분이랑 디자이너분과의 소통이 가장 활발했는데,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            각종 컴포넌트나 스크린들이 어떤 화면에서 어떤 형태로 표시되어야 하며, 어떤 상호작용이 발생했을 때 또는 어떤 상태가 변할 때 어떤 변화가 있어야 하는지, 표시할 데이터가 비어있거나 에러가 발생할 경우 어떻게 표시해야 하는지
             
          </strong>
          등등에 대한 논의가 주를 이뤘습니다. 이에 대한 논의가 결정되었을 때, 예상되는 개발 일정을 산정하고 구현을 시작합니다.
        </p>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        React Native 프로젝트를 Expo로 만든 이유?
      </h2>
      <section>
        <p
          class="text-base font-normal indent-4 undefined"
        >
          해당 앱은
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            iOS + Android를 타겟으로 하는 모바일 앱
          </strong>
          이지만,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            MacOS 뿐만 아니라 Windows로도 개발
          </strong>
          하기 때문에,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            Expo를 사용하는 것이 유일한 선택지
          </strong>
          였습니다. 실제 React Native 공식 문서에서도
           
          <a
            class="text-blue-500 hover:text-purple-500 undefined"
            href="https://reactnative.dev/docs/set-up-your-environment?platform=ios&os=windows#unsupported"
            target="_blank"
          >
            CLI 등을 통해 직접 세팅할 때 Windows로 iOS 앱을 만드는건 지원되지 않는다고 하며, 대체 방안으로 Expo와 Expo Go를 사용할 것을 안내합니다
          </a>
          . 그래서, Expo로 React Native 프로젝트를 세팅함으로써, iOS + Android 타겟인 이 앱을 MacOS뿐만 아니라 Windows로도 개발할 수 있게 만들었습니다.
        </p>
      </section>
    </section>
    <section
      class="flex flex-col gap-8 undefined"
    >
      <h2
        class="text-bold text-2xl sm:text-3xl md:text-4xl"
      >
        진행 상황 공유 방법
      </h2>
      <section
        class="flex flex-col gap-4"
      >
        <p
          class="text-base font-normal indent-4 undefined"
        >
          빌드 구축 전에는
           
          <a
            class="text-blue-500 hover:text-purple-500 undefined"
            href="https://expo.dev/go"
            target="_blank"
          >
            Expo Go
          </a>
          를 활용하였습니다. Expo Go는 개발 중인 앱을 따로 빌드하여 설치하지 않고도 QR 코드를 스캔하거나 
          <span
            class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
          >
            exp://
          </span>
          로 시작하는 URL에 접속하여
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            앱의 프리뷰를 볼 수 있게 해주는 앱
          </strong>
          입니다. 이 앱을 통해,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            빌드를 따로 만들지 않고도 팀원들에게 신속하게 프리뷰를 제공
          </strong>
          할 수 있었습니다.
        </p>
        <p
          class="text-base font-normal indent-4 undefined"
        >
          <span
            class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
          >
            expo-updates
          </span>
           패키지와 Expo Channel을 활용하여,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            CI/CD가 가능한 빌드를 구축
          </strong>
          하였습니다.
           
          <span
            class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
          >
            eas.json
          </span>
          의 
          <span
            class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
          >
            build.(프로파일명).channel
          </span>
          에 원하는 채널을 할당시키면, 그 빌드는 프로파일에 해당되는 채널의 업데이트를 따라갑니다. (
          <a
            class="text-blue-500 hover:text-purple-500 undefined"
            href="https://docs.expo.dev/build/updates/"
            target="_blank"
          >
            참고
          </a>
          ) 이를 통해
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            코드만 푸시해도 업데이트가 되는 빌드를 구축
          </strong>
          함으로써,
           
          <strong
            class="bg-emphasize-underline from-transparent from-70% to-green-500 dark:to-green-600 to-70% undefined"
          >
            무료 플랜에서 월 최대 30회까지(Android 빌드 기준, iOS는 최대 15회)밖에 안 되는
          </strong>
           
          <span
            class="font-mono bg-gray-300 text-red-700 text-sm px-1 py-0.5 rounded undefined"
          >
            eas build
          </span>
          의 사용 횟수를 획기적으로 줄일 수 있었습니다.
        </p>
      </section>
    </section>
  </div>
</main>
`;
